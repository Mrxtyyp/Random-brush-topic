export const books: { [key: string]: string[] } = {
    html: [
        '1. src 和 href 的区别',
        '2. 对 HTML 语义化的理解',
        '3. DOCTYPE(⽂档类型) 的作⽤',
        '4. script 标签中 defer 和 async 的区别',
        '5. 常⽤的 meta 标签有哪些',
        '6. HTML5 有哪些更新',
        '7. img 的 srcset 属性的作⽤？',
        '8. 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？',
        '9. 说一下 web worker',
        '10. HTML5 的离线储存怎么使用，它的工作原理是什么--了解即可',
        '11. 浏览器是如何对 HTML5 的离线储存资源进行管理和加载？',
        '12. title 与 h1 的区别、b 与 strong 的区别、i 与 em 的区别？---了解即可',
        '13. iframe 有那些优点和缺点？',
        '14. label 的作用是什么？如何使用？---了解即可',
        '15. Canvas 和 SVG 的区别',
        '16. head 标签有什么作用，其中什么标签必不可少？',
        '17. 文档声明（Doctype）和<!Doctype html>有何作用? 严格模式与混杂模式如何区分？它们有何意义?',
        '18. 浏览器乱码的原因是什么？如何解决？---了解即可',
        '19. 渐进增强和优雅降级之间的区别',
        '20. 说一下 HTML5 drag API---了解即可',
    ],
    css: [
        '一、1. CSS 选择器及其优先级',
        '一、2. CSS 中可继承与不可继承属性有哪些---了解即可',
        '一、3. display 的属性值及其作用',
        '一、4. display 的 block、inline 和 inline-block 的区别',
        '一、5. 隐藏元素的方法有哪些',
        '一、6. link 和@import 的区别',
        '一、7. transition 和 animation 的区别---了解即可',
        '一、8. display:none 与 visibility:hidden 的区别',
        '一、9. 伪元素和伪类的区别和作用？',
        '一、10. 对 requestAnimationframe 的理解',
        '一、11. 对盒模型的理解',
        '一、12. 为什么有时候⽤**translate**来改变位置⽽不是定位？',
        '一、13. li 与 li 之间有看不见的空白间隔是什么原因引起的？如何解决？',
        '一、14. CSS3 中有哪些新特性',
        '一、19. margin 和 padding 的使用场景',
        '一、20. 对line-height 的理解及其赋值方式',
        '一、21. CSS 优化和提高性能的方法有哪些？',
        '一、22. CSS 预处理器/后处理器是什么？为什么要使用它们？',
        '一、23. ::before 和 :after 的双冒号和单冒号有什么区别？',
        '一、24. display:inline-block 什么时候会显示间隙？',
        '一、25. 单行、多行文本溢出隐藏',
        '一、26. Sass、Less 是什么？为什么要使用他们？',
        '一、27. 对媒体查询的理解？',
        '一、28. 对 CSS 工程化的理解',
        '一、29. 如何判断元素是否到达可视区域',
        '一、30. z-index 属性在什么情况下会失效',
        '一、31. CSS3 中的 transform 有哪些属性',
        '二、1. 常见的 CSS 布局单位',
        '二、2. px、em、rem 的区别及使用场景',
        '二、3. 两栏布局的实现',
        '二、4. 三栏布局的实现',
        '二、5. 水平垂直居中的实现',
        '二、6. 如何根据设计稿进行移动端适配？',
        '二、7. 对 Flex 布局的理解及其使用场景',
        '三、1. 为什么需要清除浮动？清除浮动的方式',
        '三、2. 使用 clear 属性清除浮动的原理？',
        '三、3. 对 BFC 的理解，如何创建 BFC',
        '三、4. 什么是 margin 重叠问题？如何解决？',
        '三、5. 元素的层叠顺序',
        '三、6. position 的属性有哪些，区别是什么',
        '三、7. display、float、position 的关系',
        '三、8. absolute 与 fixed 共同点与不同点',
        '三、9. 对 sticky 定位的理解---了解即可',
        '四、1. 实现一个三角形',
        '四、2. 实现一个扇形',
        '四、3. 实现一个宽高自适应的正方形',
        '四、4. 画一条 0.5px 的线',
        '四、5. 设置小于 12px 的字体',
        '四、6. 如何解决 1px 问题？',
    ],
    javascript: [
        '一、1. JavaScript有哪些数据类型，它们的区别？',
        '一、2. 数据类型检测的方式有哪些',
        '一、3. 判断数组的方式有哪些',
        '一、4. null和undefined区别',
        '一、5. typeof null 的结果是什么，为什么？',
        '一、6. intanceof 操作符的实现原理及实现',
        '一、7. 为什么0.1+0.2 ! == 0.3，如何让其相等 ',
        '一、8. 如何获取安全的 undefined 值？',
        '一、9. typeof NaN 的结果是什么？',
        '一、10. isNaN 和 Number.isNaN 函数的区别？',
        '一、11. == 操作符的强制类型转换规则？',
        '一、12. 其他值到字符串的转换规则？',
        '一、13. 其他值到数字值的转换规则？',
        '一、14. 其他值到布尔类型的值的转换规则？',
        '一、15. || 和 && 操作符的返回值？',
        '一、16. Object.is() 与比较操作符 “===”、“==” 的区别？',
        '一、17. 什么是 JavaScript 中的包装类型？',
        '一、18. JavaScript 中如何进行隐式类型转换？',
        '一、19. `+` 操作符什么时候用于字符串的拼接？',
        '一、20. 为什么会有**BigInt**的提案？',
        '一、21. object.assign和扩展运算法是深拷贝还是浅拷贝，两者区别',
        '二、1. let、const、var的区别',
        '二、2. const对象的属性可以修改吗',
        '二、3. 如果new一个箭头函数的会怎么样',
        '二、4. 箭头函数与普通函数的区别',
        '二、5. 箭头函数的**this**指向哪⾥？',
        '二、6. 扩展运算符的作用及使用场景',
        '二、7. Proxy 可以实现什么功能？',
        '二、8. 对对象与数组的解构的理解',
        '二、9. **如何提取高度嵌套的对象里的指定属性？**',
        '二、10. 对 rest 参数的理解',
        '二、11. ES6中模板语法与字符串处理',
        '三、1. new操作符的实现原理',
        '三、2. map和Object的区别',
        '三、3. map和weakMap的区别',
        '三、4. JavaScript有哪些内置对象',
        '三、5. 常用的正则表达式有哪些？',
        '三、7. JavaScript脚本延迟加载的方式有哪些？',
        '三、8. JavaScript 类数组对象的定义？',
        '三、9. 数组有哪些原生方法？',
        '三、12. 为什么函数的 arguments 参数是类数组而不是数组？如何遍历类数组?',
        '三、13. 什么是 DOM 和 BOM？',
        '三、14. 对类数组对象的理解，如何转化为数组',
        '三、15. escape、encodeURI、encodeURIComponent 的区别？',
        '三、16. 对AJAX的理解，实现一个AJAX请求',
        '三、17. JavaScript为什么要进行变量提升，它导致了什么问题？',
        '三、18. 什么是尾调用，使用尾调用有什么好处？',
        '三、19.  **ES6**模块与**CommonJS**模块有什么异同？ ',
        '三、20. 常见的DOM操作有哪些',
        '三、21. use strict是什么意思 ? 使用它区别是什么？',
        '三、22. 如何判断一个对象是否属于某个类？',
        '三、23. 强类型语言和弱类型语言的区别？',
        '三、25. for...in和for...of的区别 ',
        '三、26. 如何使用for...of遍历对象 ',
        '三、27. ajax、axios、fetch的区别',
        '三、28. 数组的遍历方法有哪些',
        '三、29. forEach和map方法有什么区别',
        '四、1. 对原型、原型链的理解',
        '四、2. 原型修改、重写',
        '四、3. 原型链指向',
        '四、4. 原型链的终点是什么？如何打印出原型链的终点？',
        '四、5. 如何获得对象非原型链上的属性？',
        '五、1. 对闭包的理解',
        '五、2. 对作用域、作用域链的理解',
        '五、3. 对执行上下文的理解',
        '六、1. 对this对象的理解',
        '六、2. call() 和 apply() 的区别？',
        '六、3. 实现call、apply 及 bind 函数（建议看一下鲨鱼哥的掘金手写）',
        '七、1. 异步编程的实现方式？',
        '七、2. setTimeout、Promise、Async/Await 的区别',
        '七、3. 对Promise的理解',
        '七、4. Promise的基本用法',
        '七、5. Promise解决了什么问题',
        '七、6. Promise.all和Promise.race的区别的使用场景',
        '七、7. 对async/await 的理解',
        '七、8. await 到底在等啥？',
        '七、9. async/await的优势',
        '七、10. async/await对比Promise的优势',
        '七、11. async/await 如何捕获异常',
        '七、12. 并发与并行的区别？---了解即可',
        '七、13. 什么是回调函数？回调函数有什么缺点？如何解决回调地狱问题？',
        '七、14. setTimeout、setInterval、requestAnimationFrame 各有什么特点？',
        '八、1. 对象创建的方式有哪些？',
        '八、2. 对象继承的方式有哪些？',
        '九、1. 浏览器的垃圾回收机制',
        '九、2. 哪些情况会导致内存泄漏'
    ],
    network: [
        '一、1. GET和POST的请求的区别',
        '一、2. POST和PUT请求的区别',
        '一、3. 常见的HTTP请求头和响应头',
        '一、4. HTTP状态码304是多好还是少好',
        '一、5. 常见的HTTP请求方法',
        '一、6. OPTIONS请求方法及使用场景',
        '一、7. HTTP 1.0 和 HTTP 1.1 之间有哪些区别？',
        '一、8. HTTP 1.1 和 HTTP 2.0 的区别',
        '一、9. HTTP和HTTPS协议的区别',
        '一、10. GET方法URL长度限制的原因',
        '一、11. 当在浏览器中输入 Google.com 并且按下回车之后发生了什么？',
        '一、13. 页面有多张图片，HTTP是怎样的加载表现？',
        '一、15. HTTP请求报文的是什么样的？',
        '一、15. HTTP请求报文的是什么样的？',
        '一、16. HTTP响应报文的是什么样的？',
        '一、17. HTTP协议的优点和缺点',
        '一、18. 说一下HTTP 3.0',
        '一、20. URL有哪些组成部分',
        '一、21. 与缓存相关的HTTP请求头有哪些',
        '二、1. 什么是HTTPS协议？',
        '二、2. TLS/SSL的工作原理',
        '二、3. 数字证书是什么？',
        '二、4. HTTPS通信（握手）过程',
        '二、5. HTTPS的特点',
        '二、6. **HTTPS**是如何保证安全的？ ',
        '三、1. HTTP状态码',
        '四、DNS协议',
        '五、网络模型',
        '六、TCP和UDP',
        '七、websocket'
    ],
    browser: [
        '一、1.  什么是 XSS 攻击？',
        '一、2. 如何防御 XSS 攻击？',
        '一、3. 什么是 CSRF 攻击？',
        '一、4. 如何防御 CSRF 攻击？',
        '一、5. 什么是中间人攻击？如何防范中间人攻击？',
        '一、6. 有哪些可能引起前端安全的问题**?** ',
        '一、7. 网络劫持有哪几种，如何防范？',
        '二、1. 进程与线程的概念',
        '二、2. 进程和线程的区别',
        '二、3. 浏览器渲染进程的线程有哪些',
        '二、7. 如何实现浏览器内多个标签页之间的通信?',
        '二、8. 对Service Worker的理解',
        '三、1. 对浏览器的缓存机制的理解',
        '三、2. 浏览器资源缓存的位置有哪些？',
        '三、3. 协商缓存和强缓存的区别',
        '三、4. 为什么需要浏览器缓存？',
        '三、5. 点击刷新按钮或者按 F5、按 Ctrl+F5 （强制刷新）、地址栏回车有什么区别？',
        '四、1. 对浏览器的理解',
        '四、2. 对浏览器内核的理解',
        '四、3. 常见的浏览器内核比较',
        '四、5. 浏览器的主要组成部分',
        '五、1. 浏览器的渲染过程',
        '五、2. 浏览器渲染优化',
        '五、3. 渲染过程中遇到 JS 文件如何处理？',
        '五、4. 什么是文档的预解析？',
        '五、5. CSS 如何阻塞文档解析',
        '五、6. 如何优化关键渲染路径？',
        '五、7. 什么情况会阻塞渲染？',
        '六、1. 浏览器本地存储方式及使用场景',
        '六、2. Cookie有哪些字段，作用分别是什么',
        '六、3. Cookie、LocalStorage、SessionStorage区别',
        '六、4. 前端储存的⽅式有哪些？',
        '七、1. 什么是同源策略',
        '七、2. 如何解决跨越问题',
        '七、3. 正向代理和反向代理的区别',
        '七、4. Nginx的概念及其工作原理---了解即可',
        '八、1. 事件是什么？事件模型？',
        '八、2. 如何阻止事件冒泡',
        '八、3. 对事件委托的理解',
        '八、4. 事件委托的使用场景',
        '八、5. 同步和异步的区别',
        '八、6. 对事件循环的理解',
        '八、7. 宏任务和微任务分别有哪些',
        '八、8. 什么是执行栈',
        '八、9. Node 中的 Event Loop 和浏览器中的有什么区别？process.nextTick 执行顺序？',
        '八、10. 事件触发的过程是怎样的',
        '九、浏览器垃圾回收机制'
    ],
    handwritten: [
        '一、1. 手写 Object.create',
        '一、2. 手写 instanceof 方法',
        '一、3. 手写 new 操作符',
        '一、4. 手写 Promise',
        '一、5. 手写 Promise.then',
        '一、6. 手写 Promise.all',
        '一、7. 手写 Promise.race',
        '一、8. 手写防抖函数',
        '一、9. 手写节流函数',
        '一、10. 手写类型判断函数',
        '一、11. 手写 call 函数',
        '一、12. 手写 apply 函数',
        '一、13. 手写 bind 函数',
        '一、14. 函数柯里化的实现',
        '一、15. 实现AJAX请求',
        '一、16. 使用Promise封装AJAX请求',
        '一、17. 实现浅拷贝',
        '一、18. 实现深拷贝',
        '一、19. 实现冻结函数',
        '二、1. 实现日期格式化函数',
        '二、2. 交换a,b的值，不能用临时变量',
        '二、3. 实现数组的乱序输出',
        '二、4. 实现数组元素求和',
        '二、5. 实现数组的扁平化',
        '二、6. 实现数组去重',
        '二、7. 实现数组的flat方法',
        '二、8. 实现数组的push方法',
        '二、9. 实现数组的filter方法',
        '二、10. 实现数组的map方法',
        '二、11. 实现字符串的repeat方法',
        '二、12. 实现字符串翻转',
        '二、13. 将数字每千分位用逗号隔开',
        '二、14. 实现非负大整数相加',
        '二、13. 实现 add(1)(2)(3)',
        '二、15. 使用 reduce 求和',
        '二、16. 将js对象转化为树形结构',
        '二、17. 使用ES5和ES6求函数参数的和',
        '二、18. 解析 URL Params 为对象',
        '三、1. 循环打印红黄绿',
        '三、2. 实现每隔一秒打印 1,2,3,4',
        '三、3. 小孩报数问题',
        '三、4. 用Promise实现图片的异步加载',
        '三、5. 实现发布-订阅模式',
        '三、6. 查找文章中出现频率最高的单词',
        '三、7. 封装异步的fetch，使用async await方式来使用',
        '三、8. 实现prototype继承',
        '三、9. 实现双向数据绑定',
        '三、10. 实现简单路由',
        '三、11. 实现斐波那契数列',
        '三、12. 字符串出现的不重复最长长度',
        '三、13. 使用 setTimeout 实现 setInterval',
        '三、14. 实现 jsonp',
        '三、15. 判断对象是否存在循环引用'
    ],
    vue: [
        '一、1. Vue 基本原理',
        '一、2. 双向数据绑定的原理',
        '一、3. 使用 Object.defineProperty() 来进行数据劫持有什么缺点？',
        '一、4. MVVM、MVC、MVP的区别',
        '一、5. Computed 和 Watch 的区别',
        '一、6. Computed 和 Methods 的区别',
        '一、7. slot是什么？有什么作用？原理是什么？',
        '一、8. 过滤器的作用，如何实现一个过滤器',
        '一、9. 如何保存页面的当前的状态',
        '一、10. 常见的事件修饰符及其作用',
        '一、11. v-if、v-show、v-html 的原理',
        '一、13. v-if和v-show的区别',
        '一、14. v-model 是如何实现的，语法糖实际是什么？',
        '一、15. v-model 可以被用在自定义组件上吗？如果可以，如何使用？',
        '一、16. data为什么是一个函数而不是对象',
        '一、17. 对keep-alive的理解，它是如何实现的，具体缓存的是什么？',
        '一、18. $nextTick 原理及作用',
        '一、19. Vue 中给 data 中的对象属性添加一个新的属性时会发生什么？如何解决？',
        '一、20. Vue中封装的数组方法有哪些，其如何实现页面更新',
        '一、21. Vue 单页应用与多页应用的区别',
        '一、22. Vue template 到 render 的过程',
        '一、23. Vue data 中某一个属性的值发生改变后，视图会立即同步执行重新渲染吗？',
        '一、24. 简述 mixin、extends 的覆盖逻辑',
        '一、25. 描述下Vue自定义指令',
        '一、26. 子组件可以直接改变父组件的数据吗？',
        '一、27. Vue是如何收集依赖的？',
        '一、28. 对 React 和 Vue 的理解，它们的异同',
        '一、29. Vue的优点',
        '一、30. assets和static的区别',
        '一、31. delete和Vue.delete删除数组的区别',
        '一、32. vue如何监听对象或者数组某个属性的变化',
        '一、33. 什么是 mixin ？',
        '一、34. Vue模版编译原理',
        '一、35. 对SSR的理解',
        '一、36. Vue的性能优化有哪些',
        '一、37. 对 SPA 单页面的理解，它的优缺点分别是什么？',
        '一、38. template和jsx的有什么分别？',
        '一、39. vue初始化页面闪动问题',
        '一、40. extend 有什么作用',
        '一、41. mixin 和 mixins 区别',
        '一、42. MVVM的优缺点?',
        '一、43. Vue.use的实现原理',
        '二、1. 说一下Vue的生命周期',
        '二、2. Vue 子组件和父组件执行顺序',
        '二、3. created和mounted的区别',
        '二、4. 一般在哪个生命周期请求异步数据',
        '二、5. keep-alive 中的生命周期哪些',
        '三、组件间通信',
        '四、Vue-Router',
        '伍、Vuex',
        '六、1. Vue3.0有什么更新',
        '六、2. defineProperty和proxy的区别',
        '六、3. Vue3.0 为什么要用 proxy？',
        '六、4. Vue 3.0 中的 Vue Composition API？',
        '六、5. Composition API与React Hook很像，区别是什么',   
        '七、1. 对虚拟DOM的理解？',
        '七、2. 虚拟DOM的解析过程',
        '七、3. 为什么要用虚拟DOM',
        '七、4. 虚拟DOM真的比真实DOM性能好吗',
        '七、5. DIFF算法的原理',
        '七、6. Vue中key的作用',
        '七、7. 为什么不建议用index作为key?',
    ],
    webpack: [
        '1.前端为何要进行打包和构建',
        '2. 与 webpack 类似的工具还有哪些？谈谈你为什么选择使用 webpack 或放弃 webpack',
        '3. loader 和 plugin 的不同',
        '4. 自定义 loader',
        '5. 自定义 plugin',
        '6. 有哪些常见的 loader 和 plugin？它们是解决什么问题的？',
        '7. source-map是什么？生成环境怎么用？',
        '8. webpack中 hash、chunkhash、contenthash的区别',
        '9. webpack 的工作流程',
        '10. webpack 的热更新原理',
        '11. tree shaking 机制的原理',
        '12. module chunk 和 bundle',
        '13. chunk 和 bundle 之间的关系',
        '14. 如何提高 webpack 的构建速度',
        '15. webpack 性能优化 - 产出代码',
    ]
}