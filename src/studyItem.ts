
export const books: { [key: string]: string[] } = {"1 前端面试准备":["一、面试准备 - 1. 利用脑图来梳理知识点","一、面试准备 - 2. 程序员应该具备哪些软技能？","一、面试准备 - 3. 准备合适的技术型简历","一、面试准备 - 4. 收到面试邀请之后的准备","二、面试过程： - 1. 面试过程中要注意社交礼仪","二、面试过程： - 2 面试中出现的常规问题","二、面试过程： - 3. 如何介绍自己的项目经历","二、面试过程： - 4. 项目细节和技术点的追问","二、面试过程： - 5. 没有做过大型项目怎么办","二、面试过程： - 6. 当被分配一个几乎不可能完成的任务时，会怎么做","二、面试过程： - 7. 提问环节","三、HR面试： - 1. 谈薪资——准确定位和自我估值","三、HR面试： - 2. 跟 HR 沟通的技巧","四、其他 - 1. 总结和思考","四、其他 - 2. 面试注意点"],"2 程序员面试软技能":["一、如何通过HR - 1. HR⾯的⽬的 ","一、如何通过HR - 2. HR⾯的常⻅问题 ","二、回答问题的技巧 - 1. ⾃我介绍 ","二、回答问题的技巧 - 2. 技术考察","二、回答问题的技巧 - 3. 向⾯试官提问 ","三、试官到底想看什么样的简历？ - 1. 准备简历模板 ","三、试官到底想看什么样的简历？ - 2. 准备个⼈信息 ","三、试官到底想看什么样的简历？ - 3. 准备专业技能 ","三、试官到底想看什么样的简历？ - 4. 准备⼯作经历 ","三、试官到底想看什么样的简历？ - 5. 准备项⽬经历 ","三、试官到底想看什么样的简历？ - 6. 其他"],"3 offer收割机之HTML篇":[" - 1. src 和 href 的区别"," - 2. 对 HTML 语义化的理解"," - 3. DOCTYPE(⽂档类型) 的作⽤"," - 4. script 标签中 defer 和 async 的区别"," - 5. 常⽤的 meta 标签有哪些"," - 6. HTML5 有哪些更新"," - 7. img 的 srcset 属性的作⽤？"," - 8. 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？"," - 9. 说一下 web worker"," - 10. HTML5 的离线储存怎么使用，它的工作原理是什么--了解即可"," - 11. 浏览器是如何对 HTML5 的离线储存资源进行管理和加载？"," - 12. title 与 h1 的区别、b 与 strong 的区别、i 与 em 的区别？---了解即可"," - 13. **iframe 有那些优点和缺点？**"," - 14. label 的作用是什么？如何使用？---了解即可"," - 15. Canvas 和 SVG 的区别"," - 16. head 标签有什么作用，其中什么标签必不可少？"," - 17. 文档声明（Doctype）和<!Doctype html>有何作用? 严格模式与混杂模式如何区分？它们有何意义?"," - 18. 浏览器乱码的原因是什么？如何解决？---了解即可"," - 19. 渐进增强和优雅降级之间的区别"," - 20. 说一下 HTML5 drag API---了解即可"],"4 offer收割机之CSS篇":["一、CSS基础 - 1. CSS 选择器及其优先级","一、CSS基础 - 2. CSS 中可继承与不可继承属性有哪些---了解即可","一、CSS基础 - 3. display 的属性值及其作用","一、CSS基础 - 4. display 的 block、inline 和 inline-block 的区别","一、CSS基础 - 5. 隐藏元素的方法有哪些","一、CSS基础 - 6. link 和@import 的区别","一、CSS基础 - 7. transition 和 animation 的区别---了解即可","一、CSS基础 - 8. display:none 与 visibility:hidden 的区别","一、CSS基础 - 9. **伪元素和伪类的区别和作用？**","一、CSS基础 - 10. 对 requestAnimationframe 的理解","一、CSS基础 - 11. 对盒模型的理解","一、CSS基础 - 12. 为什么有时候⽤**translate**来改变位置⽽不是定位？","一、CSS基础 - 13. li 与 li 之间有看不见的空白间隔是什么原因引起的？如何解决？","一、CSS基础 - 14. CSS3 中有哪些新特性","一、CSS基础 - 15. 替换元素的概念及计算规则---不需要看","一、CSS基础 - 16. 常见的图片格式及使用场景","一、CSS基础 - 17. 对 CSSSprites 的理解---了解即可","一、CSS基础 - 18. 什么是物理像素，逻辑像素和像素密度，为什么在移动端开发时需要用到@3x, @2x 这种图片？","一、CSS基础 - 19. **margin 和 padding 的使用场景**","一、CSS基础 - 20. 对**line-height 的理解及其赋值方式**","一、CSS基础 - 21. CSS 优化和提高性能的方法有哪些？","一、CSS基础 - 22. CSS 预处理器/后处理器是什么？为什么要使用它们？","一、CSS基础 - 23. ::before 和 :after 的双冒号和单冒号有什么区别？","一、CSS基础 - 24. display:inline-block 什么时候会显示间隙？","一、CSS基础 - 25. 单行、多行文本溢出隐藏","一、CSS基础 - 26. Sass、Less 是什么？为什么要使用他们？","一、CSS基础 - 27. 对媒体查询的理解？","一、CSS基础 - 28. 对 CSS 工程化的理解","一、CSS基础 - 29. 如何判断元素是否到达可视区域","一、CSS基础 - 30. z-index 属性在什么情况下会失效","一、CSS基础 - 31. CSS3 中的 transform 有哪些属性","二、页面布局 - 1. 常见的 CSS 布局单位","二、页面布局 - 2. px、em、rem 的区别及使用场景","二、页面布局 - 3. 两栏布局的实现","二、页面布局 - 4. 三栏布局的实现","二、页面布局 - 5.水平垂直居中的实现","二、页面布局 - 6. 如何根据设计稿进行移动端适配？","二、页面布局 - 7. 对 Flex 布局的理解及其使用场景","二、页面布局 - 8. 响应式设计的概念及基本原理","三、定位与浮动 - 1. 为什么需要清除浮动？清除浮动的方式","三、定位与浮动 - 2. 使用 clear 属性清除浮动的原理？","三、定位与浮动 - 3. 对 BFC 的理解，如何创建 BFC","三、定位与浮动 - 4. 什么是 margin 重叠问题？如何解决？","三、定位与浮动 - 5. 元素的层叠顺序","三、定位与浮动 - 6. position 的属性有哪些，区别是什么","三、定位与浮动 - 7. **display、float、position 的关系**","三、定位与浮动 - 8. absolute 与 fixed 共同点与不同点","三、定位与浮动 - 9. 对 sticky 定位的理解---了解即可","四、场景应用 - 1. 实现一个三角形","四、场景应用 - 2. 实现一个扇形","四、场景应用 - 3. 实现一个宽高自适应的正方形","四、场景应用 - 4. 画一条 0.5px 的线","四、场景应用 - 5. 设置小于 12px 的字体","四、场景应用 - 6. 如何解决 1px 问题？"],"5 offer收割机之JavaScript篇":["一、数据类型 - 1. JavaScript有哪些数据类型，它们的区别？","一、数据类型 - 2. 数据类型检测的方式有哪些","一、数据类型 - 3. 判断数组的方式有哪些","一、数据类型 - 4. null和undefined区别","一、数据类型 - 5. typeof null 的结果是什么，为什么？","一、数据类型 - 6. intanceof 操作符的实现原理及实现","一、数据类型 - 7. 为什么0.1+0.2 ! == 0.3，如何让其相等  ","一、数据类型 - 8. 如何获取安全的 undefined 值？","一、数据类型 - 9. typeof NaN 的结果是什么？","一、数据类型 - 10. isNaN 和 Number.isNaN 函数的区别？","一、数据类型 - 11. == 操作符的强制类型转换规则？","一、数据类型 - 12. 其他值到字符串的转换规则？","一、数据类型 - 13. 其他值到数字值的转换规则？","一、数据类型 - 14. 其他值到布尔类型的值的转换规则？","一、数据类型 - 15. || 和 && 操作符的返回值？","一、数据类型 - 16. Object.is() 与比较操作符 “`===`”、“`==`” 的区别？","一、数据类型 - 17. 什么是 JavaScript 中的包装类型？","一、数据类型 - 18. JavaScript 中如何进行隐式类型转换？","一、数据类型 - 19. `+` 操作符什么时候用于字符串的拼接？","一、数据类型 - 20. 为什么会有**BigInt**的提案？ ","一、数据类型 - 21. object.assign和扩展运算法是深拷贝还是浅拷贝，两者区别","二、ES6 - 1. let、const、var的区别","二、ES6 - 2. const对象的属性可以修改吗","二、ES6 - 3. 如果new一个箭头函数的会怎么样","二、ES6 - 4. 箭头函数与普通函数的区别","二、ES6 - 5. 箭头函数的**this**指向哪⾥？","二、ES6 - 6. 扩展运算符的作用及使用场景","二、ES6 - 7. Proxy 可以实现什么功能？","二、ES6 - 8. 对对象与数组的解构的理解","二、ES6 - 9. **如何提取高度嵌套的对象里的指定属性？**","二、ES6 - 10. 对 rest 参数的理解","二、ES6 - 11. ES6中模板语法与字符串处理","三、JavaScript基础 - 1. new操作符的实现原理","三、JavaScript基础 - 2. map和Object的区别---了解即可","三、JavaScript基础 - 3. map和weakMap的区别---了解即可","三、JavaScript基础 - 4. JavaScript有哪些内置对象","三、JavaScript基础 - 5. 常用的正则表达式有哪些？","三、JavaScript基础 - 6. 对JSON的理解---了解即可","三、JavaScript基础 - 7. JavaScript脚本延迟加载的方式有哪些？","三、JavaScript基础 - 8. JavaScript 类数组对象的定义？","三、JavaScript基础 - 9. 数组有哪些原生方法？","三、JavaScript基础 - 10. **Unicode、UTF-8、UTF-16、UTF-32的区别？**---了解即可","三、JavaScript基础 - 11. 常见的位运算符有哪些？其计算规则是什么？---了解即可","三、JavaScript基础 - 12. 为什么函数的 arguments 参数是类数组而不是数组？如何遍历类数组?","三、JavaScript基础 - 13. 什么是 DOM 和 BOM？","三、JavaScript基础 - 14. 对类数组对象的理解，如何转化为数组","三、JavaScript基础 - 15. escape、encodeURI、encodeURIComponent 的区别","三、JavaScript基础 - 16. 对AJAX的理解，实现一个AJAX请求","三、JavaScript基础 - 17. JavaScript为什么要进行变量提升，它导致了什么问题？","三、JavaScript基础 - 18. 什么是尾调用，使用尾调用有什么好处？","三、JavaScript基础 - 19.  **ES6**模块与**CommonJS**模块有什么异同？ ","三、JavaScript基础 - 20. 常见的DOM操作有哪些","三、JavaScript基础 - 21. use strict是什么意思 ? 使用它区别是什么？","三、JavaScript基础 - 22. 如何判断一个对象是否属于某个类？","三、JavaScript基础 - 23. 强类型语言和弱类型语言的区别","三、JavaScript基础 - 24. 解释性语言和编译型语言的区别---了解即可","三、JavaScript基础 - 25. for...in和for...of的区别 ","三、JavaScript基础 - 26. 如何使用for...of遍历对象 ","三、JavaScript基础 - 27. ajax、axios、fetch的区别","三、JavaScript基础 - 28. 数组的遍历方法有哪些","三、JavaScript基础 - 29. forEach和map方法有什么区别","四、原型与原型链 - 1. 对原型、原型链的理解","四、原型与原型链 - 2. 原型修改、重写","四、原型与原型链 - 3. 原型链指向","四、原型与原型链 - 4. 原型链的终点是什么？如何打印出原型链的终点？","四、原型与原型链 - 5. 如何获得对象非原型链上的属性？","五、执行上下文作用域链闭包 - 1. 对闭包的理解","五、执行上下文作用域链闭包 - 2. 对作用域、作用域链的理解","五、执行上下文作用域链闭包 - 3. 对执行上下文的理解","六、thiscallapplybind - 1. 对this对象的理解","六、thiscallapplybind - 2. call() 和 apply() 的区别？","六、thiscallapplybind - 3. 实现call、apply 及 bind 函数（建议看一下鲨鱼哥的掘金手写）","七、异步编程 - 1. 异步编程的实现方式？","七、异步编程 - 2. setTimeout、Promise、Async/Await 的区别","七、异步编程 - 3. 对Promise的理解","七、异步编程 -  4. Promise的基本用法","七、异步编程 - 5. Promise解决了什么问题","七、异步编程 - 6. Promise.all和Promise.race的区别的使用场景","七、异步编程 - 7.  对async/await 的理解","七、异步编程 - 8. await 到底在等啥？","七、异步编程 - 9.  async/await的优势","七、异步编程 - 10. async/await对比Promise的优势","七、异步编程 - 11. async/await 如何捕获异常","七、异步编程 - 12. 并发与并行的区别？---了解即可","七、异步编程 - 13. 什么是回调函数？回调函数有什么缺点？如何解决回调地狱问题？","七、异步编程 - 14. setTimeout、setInterval、requestAnimationFrame 各有什么特点？","八、面向对象 - 1. 对象创建的方式有哪些？","八、面向对象 - 2. 对象继承的方式有哪些？","九、垃圾回收与内存泄漏了解即可 - 1. 浏览器的垃圾回收机制","九、垃圾回收与内存泄漏了解即可 - 2. 哪些情况会导致内存泄漏"],"6 offer收割机之性能优化篇":["一、CDN了解即可 - 1. CDN的概念","一、CDN了解即可 - 2. CDN的作用 ","一、CDN了解即可 - 3. CDN的原理","一、CDN了解即可 - 4. CDN的使用场景","二、懒加载 - 1. 懒加载的概念","二、懒加载 - 2. 懒加载的特点","二、懒加载 - 3. 懒加载的实现原理","二、懒加载 - 4. 懒加载与预加载的区别","三、回流与重绘 - 1. 回流与重绘的概念及触发条件","三、回流与重绘 - 2. 如何避免回流与重绘？","三、回流与重绘 - 3. 如何优化动画？","三、回流与重绘 - 4. documentFragment 是什么？用它跟直接操作 DOM 的区别是什么？","四、节流与防抖 - 1. 对节流与防抖的理解","四、节流与防抖 - 2. 实现节流函数和防抖函数","五、图片优化 - 1. 如何对项目中的图片进行优化？","五、图片优化 - 2. 常见的图片格式及使用场景","六、Webpack优化 - 1. 如何提⾼**webpack**的打包速度**?** ","六、Webpack优化 - 2. 如何减少 Webpack 打包体积","六、Webpack优化 - 3. 如何⽤**webpack**来优化前端性能？ ","六、Webpack优化 - 4. 如何提⾼**webpack**的构建速度？ "],"7 offer收割机之React篇":["一、组件基础 - 1. React 事件机制","一、组件基础 - 2. React的事件和普通的HTML事件有什么不同？","一、组件基础 - 3. React 组件中怎么做事件代理？它的原理是什么？","一、组件基础 - 4. React 高阶组件、Render props、hooks 有什么区别，为什么要不断迭代","一、组件基础 - 5. 对React-Fiber的理解，它解决了什么问题？","一、组件基础 - 6. React.Component 和 React.PureComponent 的区别","一、组件基础 - 7. Component, Element, Instance 之间有什么区别和联系？","一、组件基础 - 8. React.createClass和extends Component的区别有哪些？","一、组件基础 - 9. React 高阶组件是什么，和普通组件有什么区别，适用什么场景","一、组件基础 - 10. 对componentWillReceiveProps 的理解","一、组件基础 - 11. 哪些方法会触发 React 重新渲染？重新渲染 render 会做些什么？","一、组件基础 - 12. React如何判断什么时候重新渲染组件？","一、组件基础 - 13. React声明组件有哪几种方法，有什么不同？","一、组件基础 - 14. 对有状态组件和无状态组件的理解及使用场景","一、组件基础 - 15. 对React中Fragment的理解，它的使用场景是什么？","一、组件基础 - 16. React如何获取组件对应的DOM元素？","一、组件基础 - 17. React中可以在render访问refs吗？为什么？","一、组件基础 - 18. 对React的插槽(Portals)的理解，如何使用，有哪些使用场景","一、组件基础 - 19. 在React中如何避免不必要的render？","一、组件基础 - 20. 对 React-Intl 的理解，它的工作原理？","一、组件基础 - 21. 对 React context 的理解","一、组件基础 - 22. 为什么React并不推荐优先考虑使用Context？","一、组件基础 - 23. React中什么是受控组件和非控组件？","一、组件基础 - 24. React中refs的作用是什么？有哪些应用场景？","一、组件基础 - 25. React中除了在构造函数中绑定this，还有别的方式吗？","一、组件基础 - 26. React组件的构造函数有什么作用？它是必须的吗？","一、组件基础 - 27. React.forwardRef是什么？它有什么作用？","一、组件基础 - 28. 类组件与函数组件有什么异同？","二、数据管理 - 1. React setState 调用的原理","二、数据管理 - 2. React setState 调用之后发生了什么？是同步还是异步？","二、数据管理 - 3. React中的setState批量更新的过程是什么？","二、数据管理 - 4.  React中有使用过getDefaultProps吗？它有什么作用？","二、数据管理 - 5. React中setState的第二个参数作用是什么？","二、数据管理 - 6. React中的setState和replaceState的区别是什么？","二、数据管理 - 7. 在React中组件的this.state和setState有什么区别？","二、数据管理 - 8. state 是怎么注入到组件的，从 reducer 到组件经历了什么样的过程","二、数据管理 - 9. React组件的state和props有什么区别？","二、数据管理 - 10. React中的props为什么是只读的？","二、数据管理 - 11. 在React中组件的props改变时更新组件的有哪些方法？","二、数据管理 - 12. React中怎么检验props？验证props的目的是什么？","三、生命周期 - 1. React的生命周期有哪些？","三、生命周期 - 2. React 废弃了哪些生命周期？为什么？","三、生命周期 - 3. React 16.X 中 props 改变后在哪个生命周期中处理","三、生命周期 - 4. React 性能优化在哪个生命周期？它优化的原理是什么？","三、生命周期 - 5. state 和 props 触发更新的生命周期分别有什么区别？","三、生命周期 - 6. React中发起网络请求应该在哪个生命周期中进行？为什么？","三、生命周期 - 7. React 16中新生命周期有哪些","四、组件通信 - 1. 父子组件的通信方式？","四、组件通信 - 2. 跨级组件的通信方式？","四、组件通信 - 3. 非嵌套关系组件的通信方式？","四、组件通信 - 4. 如何解决 props 层级过深的问题","四、组件通信 - 5. 组件通信的方式有哪些","五、路由 - 1. React-Router的实现原理是什么？","五、路由 - 2. 如何配置 React-Router 实现路由切换","五、路由 - 3. React-Router怎么设置重定向？","五、路由 - 4. react-router 里的 Link 标签和 a 标签的区别","五、路由 - 5. React-Router如何获取URL的参数和历史对象？","五、路由 - 6. React-Router 4怎样在路由变化时重新渲染同一个组件？","五、路由 - 7. React-Router的路由有几种模式？","五、路由 - 8. React-Router 4的Switch有什么用？","六、Redux - 1. 对 Redux 的理解，主要解决什么问题","六、Redux - 2. Redux 原理及工作流程","六、Redux - 3. Redux 中异步的请求怎么处理","六、Redux - 4. Redux 怎么实现属性传递，介绍下原理","六、Redux - 5. Redux 中间件是什么？接受几个参数？柯里化函数两端的参数具体是什么？","六、Redux - 6. Redux 请求中间件如何处理并发","六、Redux - 7. Redux 状态管理器和变量挂载到 window 中有什么区别","六、Redux - 8. mobox 和 redux 有什么区别？","六、Redux - 9. Redux 和 Vuex 有什么区别，它们的共同思想","六、Redux - 10. Redux 中间件是怎么拿到store 和 action? 然后怎么处理?","六、Redux - 11. Redux中的connect有什么作用","七、Hooks - 1. 对 React Hook 的理解，它的实现原理是什么","七、Hooks - 2. 为什么 useState 要使用数组而不是对象","七、Hooks - 3. React Hooks 解决了哪些问题？","七、Hooks - 4. React Hook 的使用限制有哪些？","七、Hooks - 5. useEffect 与 useLayoutEffect 的区别","七、Hooks - 6. React Hooks在平时开发中需要注意的问题和原因","七、Hooks - 7. React Hooks 和生命周期的关系？","八、虚拟DOM - 1. 对虚拟 DOM 的理解？虚拟 DOM 主要做了什么？虚拟 DOM 本身是什么？","八、虚拟DOM - 2. React diff 算法的原理是什么？","八、虚拟DOM - 3. React key 是干嘛用的 为什么要加？key 主要是解决哪一类问题的","八、虚拟DOM - 4. 虚拟 DOM 的引入与直接操作原生 DOM 相比，哪一个效率更高，为什么","八、虚拟DOM - 5. React 与 Vue 的 diff 算法有何不同？","九、其他 - 1. React组件命名推荐的方式是哪个？","九、其他 - 2. react 最新版本解决了什么问题，增加了哪些东西","九、其他 - 3. react 实现一个全局的 dialog","九、其他 - 4. React 数据持久化有什么实践吗？","九、其他 - 5. 对 React 和 Vue 的理解，它们的异同","九、其他 - 6. 可以使用TypeScript写React应用吗？怎么操作？","九、其他 - 7. React 设计思路，它的理念是什么？","九、其他 - 8. React中props.children和React.Children的区别","九、其他 - 9. React的状态提升是什么？使用场景有哪些？","九、其他 - 10. React中constructor和getInitialState的区别?","九、其他 - 11. React的严格模式如何使用，有什么用处？","九、其他 - 12. 在React中遍历的方法有哪些？","九、其他 - 13. 在React中页面重新加载时怎样保留数据？","九、其他 - 14. 同时引用这三个库react.js、react-dom.js和babel.js它们都有什么作用？","九、其他 - 15. React必须使用JSX吗？","九、其他 - 16. 为什么使用jsx的组件中没有看到使用react却需要引入react？","九、其他 - 17. 在React中怎么使用async/await？","九、其他 - 18. React.Children.map和js的map有什么区别？","九、其他 - 19. 对React SSR的理解","九、其他 - 20. 为什么 React 要用 JSX？","九、其他 - 21. HOC相比 mixins 有什么优点？","九、其他 - 22. React 中的高阶组件运用了什么设计模式？"],"7 offer收割机之前端工程化篇":["一、Git - 1. git 和 svn 的区别","一、Git - 2. 经常使用的 git 命令？","一、Git - 3. git pull 和 git fetch 的区别","一、Git - 4. git rebase 和 git merge 的区别","二、Webpack - 1. **webpack**与**grunt**、**gulp**的不同？ ","二、Webpack - 2. **webpack**、**rollup**、**parcel**优劣？ ","二、Webpack - 3. 有哪些常⻅的**Loader**？ ","二、Webpack - 4. 有哪些常⻅的**Plugin**？ ","二、Webpack - 5. **bundle**，**chunk**，**module**是什么？","二、Webpack - 6. **Loader**和**Plugin**的不同？ ","二、Webpack - 7. **webpack**的构建流程**?** ","二、Webpack - 8. 编写**loader**或**plugin**的思路？","二、Webpack - 9. **webpack**的热更新是如何做到的？说明其原理？ ","二、Webpack - 10. 如何⽤**webpack**来优化前端性能？ ","二、Webpack - 11. 如何提⾼**webpack**的打包速度**?** ","二、Webpack - 12. 如何提⾼**webpack**的构建速度？ ","二、Webpack - 13. 怎么配置单⻚应⽤？怎么配置多⻚应⽤？ ","三、其他 - **1. Babel**的原理是什么**?** "],"8 offer收割机之计算机网络篇":["一、HTTP协议 - 1. GET和POST的请求的区别 ","一、HTTP协议 - 2. POST和PUT请求的区别","一、HTTP协议 - 3. 常见的HTTP请求头和响应头","一、HTTP协议 - 4. HTTP状态码304是多好还是少好","一、HTTP协议 - 5. 常见的HTTP请求方法","一、HTTP协议 - 6. OPTIONS请求方法及使用场景","一、HTTP协议 - 7. HTTP 1.0 和 HTTP 1.1 之间有哪些区别？","一、HTTP协议 - 8. HTTP 1.1 和 HTTP 2.0 的区别","一、HTTP协议 - 9. HTTP和HTTPS协议的区别","一、HTTP协议 - 10. GET方法URL长度限制的原因","一、HTTP协议 - 11. 当在浏览器中输入 Google.com 并且按下回车之后发生了什么？","一、HTTP协议 - 12. 对keep-alive的理解---了解即可","一、HTTP协议 - 13. 页面有多张图片，HTTP是怎样的加载表现？","一、HTTP协议 - 14. HTTP2的头部压缩算法是怎样的？---了解即可","一、HTTP协议 - 15. HTTP请求报文的是什么样的？","一、HTTP协议 - 16. HTTP响应报文的是什么样的？","一、HTTP协议 - 17. HTTP协议的优点和缺点","一、HTTP协议 - 18. 说一下HTTP 3.0","一、HTTP协议 - 19. HTTP协议的性能怎么样 ---了解即可","一、HTTP协议 - 20. URL有哪些组成部分","一、HTTP协议 - 21. 与缓存相关的HTTP请求头有哪些","二、HTTPS协议 - 1. 什么是HTTPS协议？","二、HTTPS协议 - 2. TLS/SSL的工作原理","二、HTTPS协议 - 3. 数字证书是什么？","二、HTTPS协议 - 4. HTTPS通信（握手）过程","二、HTTPS协议 - 5. HTTPS的特点","二、HTTPS协议 - 6. **HTTPS**是如何保证安全的？ ","三、HTTP状态码 - 1. 2XX (Success 成功状态码)","三、HTTP状态码 - 2. 3XX (Redirection 重定向状态码)","三、HTTP状态码 - 3. 4XX (Client Error 客户端错误状态码)","三、HTTP状态码 - 4. 5XX (Server Error 服务器错误状态码)---了解即可","三、HTTP状态码 - 5. 总结","三、HTTP状态码 - 6. 同样是重定向，**307**，**303**，**302**的区别？ ","四、DNS协议介绍了解即可 - 1. DNS 协议是什么","四、DNS协议介绍了解即可 - 2. DNS同时使用TCP和UDP协议？","四、DNS协议介绍了解即可 - 3. DNS完整的查询过程","四、DNS协议介绍了解即可 - 4. 迭代查询与递归查询","四、DNS协议介绍了解即可 - 5. DNS 记录和报文","五、网络模型了解即可 - 1. OSI七层模型","五、网络模型了解即可 - 2. TCP/IP五层协议","六、TCP与UDP了解即可 - 1. TCP 和 UDP的概念及特点","六、TCP与UDP了解即可 - 2. TCP和UDP的区别","六、TCP与UDP了解即可 - 3. TCP和UDP的使用场景","六、TCP与UDP了解即可 - 4. UDP协议为什么不可靠？","六、TCP与UDP了解即可 - 5. TCP的重传机制","六、TCP与UDP了解即可 - 6. TCP的拥塞控制机制","六、TCP与UDP了解即可 - 7. TCP的流量控制机制","六、TCP与UDP了解即可 - 8. TCP的可靠传输机制","六、TCP与UDP了解即可 - 9. TCP的三次握手和四次挥手---了解即可","六、TCP与UDP了解即可 - 10. **TCP**粘包是怎么回事，如何处理**?** ---了解即可（或者不需要看）","六、TCP与UDP了解即可 - 11. 为什么**udp**不会粘包？ ---了解即可（或者不需要看）","七、WebSocket - 1. 对 WebSocket 的理解","七、WebSocket - 2. 即时通讯的实现：短轮询、长轮询、SSE 和 WebSocket 间的区别？---了解即可"],"9 offer收割机之浏览器原理篇":["一、浏览器安全 - 1.  什么是 XSS 攻击？","一、浏览器安全 - 2. 如何防御 XSS 攻击？","一、浏览器安全 - 3. 什么是 CSRF 攻击？","一、浏览器安全 - 4. 如何防御 CSRF 攻击？","一、浏览器安全 - 5. 什么是中间人攻击？如何防范中间人攻击？","一、浏览器安全 - 6. 有哪些可能引起前端安全的问题**?** ","一、浏览器安全 - 7. 网络劫持有哪几种，如何防范？","二、进程与线程 - 1. 进程与线程的概念","二、进程与线程 - 2. 进程和线程的区别","二、进程与线程 - 3. 浏览器渲染进程的线程有哪些","二、进程与线程 - 4. 进程之前的通信方式---了解即可","二、进程与线程 - 5. 僵尸进程和孤儿进程是什么？---了解即可（或者不需要看）","二、进程与线程 - 6. 死锁产生的原因？ 如果解决死锁的问题？---了解即可（或者不需要看）","二、进程与线程 - 7. 如何实现浏览器内多个标签页之间的通信?","二、进程与线程 - 8. 对Service Worker的理解","三、浏览器缓存 - 1. 对浏览器的缓存机制的理解","三、浏览器缓存 - 2. 浏览器资源缓存的位置有哪些？","三、浏览器缓存 - 3. 协商缓存和强缓存的区别","三、浏览器缓存 - 4. 为什么需要浏览器缓存？","三、浏览器缓存 - 5. 点击刷新按钮或者按 F5、按 Ctrl+F5 （强制刷新）、地址栏回车有什么区别？","四、浏览器组成 - 1. 对浏览器的理解","四、浏览器组成 - 2. 对浏览器内核的理解","四、浏览器组成 - 3. 常见的浏览器内核比较","四、浏览器组成 - 4. 常见浏览器所用内核---了解即可","四、浏览器组成 - 5. 浏览器的主要组成部分","五、浏览器渲染原理 - 1. 浏览器的渲染过程","五、浏览器渲染原理 - 2. 浏览器渲染优化","五、浏览器渲染原理 - 3. 渲染过程中遇到 JS 文件如何处理？","五、浏览器渲染原理 - 4. 什么是文档的预解析？","五、浏览器渲染原理 - 5. CSS 如何阻塞文档解析？","五、浏览器渲染原理 - 6. 如何优化关键渲染路径？","五、浏览器渲染原理 - 7. 什么情况会阻塞渲染？","六、浏览器本地存储 - 1. 浏览器本地存储方式及使用场景","六、浏览器本地存储 - 2. Cookie有哪些字段，作用分别是什么","六、浏览器本地存储 - 3. Cookie、LocalStorage、SessionStorage区别","六、浏览器本地存储 - 4. 前端储存的⽅式有哪些？","六、浏览器本地存储 - 5. IndexedDB有哪些特点？---了解即可","七、浏览器同源策略 - 1. 什么是同源策略","七、浏览器同源策略 - 2. 如何解决跨越问题","七、浏览器同源策略 - 3. 正向代理和反向代理的区别---了解即可","七、浏览器同源策略 - 4. Nginx的概念及其工作原理---了解即可（或者不需要看）","八、浏览器事件机制 - 1. 事件是什么？事件模型？","八、浏览器事件机制 - 2. 如何阻止事件冒泡","八、浏览器事件机制 - 3. 对事件委托的理解","八、浏览器事件机制 - 4. 事件委托的使用场景","八、浏览器事件机制 - 5. 同步和异步的区别","八、浏览器事件机制 - 6. 对事件循环的理解","八、浏览器事件机制 - 7. 宏任务和微任务分别有哪些","八、浏览器事件机制 - 8. 什么是执行栈","八、浏览器事件机制 - 9. Node 中的 Event Loop 和浏览器中的有什么区别？process.nextTick 执行顺序？","八、浏览器事件机制 - 10. 事件触发的过程是怎样的 ","九、浏览器垃圾回收机制了解即可 - 1. V8的垃圾回收机制是怎样的","九、浏览器垃圾回收机制了解即可 - 2. 哪些操作会造成内存泄漏？"],"10 offer收割机之手写代码篇":["##手写系列建议配合鲨鱼哥的掘金手写面试题文章一起看（更多更全）","一、JavaScript基础 - 1. 手写 Object.create ","一、JavaScript基础 - 2. 手写 instanceof 方法","一、JavaScript基础 - 3. 手写 new 操作符","一、JavaScript基础 - 4. 手写 Promise","一、JavaScript基础 - 5. 手写 Promise.then","一、JavaScript基础 - 6. 手写 Promise.all","一、JavaScript基础 - 7. 手写 Promise.race","一、JavaScript基础 - 8. 手写防抖函数","一、JavaScript基础 - 9. 手写节流函数","一、JavaScript基础 - 10. 手写类型判断函数","一、JavaScript基础 - 11. 手写 call 函数","一、JavaScript基础 - 12. 手写 apply 函数","一、JavaScript基础 - 13. 手写 bind 函数","一、JavaScript基础 - 14. 函数柯里化的实现","一、JavaScript基础 - 15. 实现AJAX请求","一、JavaScript基础 - 16. 使用Promise封装AJAX请求","一、JavaScript基础 - 17. 实现浅拷贝","一、JavaScript基础 - 18. 实现深拷贝","二、数据处理 - 1. 实现日期格式化函数","二、数据处理 - 2. 交换a,b的值，不能用临时变量","二、数据处理 - 3. 实现数组的乱序输出","二、数据处理 - 4. 实现数组元素求和","二、数据处理 - 5. 实现数组的扁平化","二、数据处理 - 6. 实现数组去重","二、数据处理 - 7. 实现数组的flat方法","二、数据处理 - 8. 实现数组的push方法","二、数据处理 - 9. 实现数组的filter方法","二、数据处理 - 10. 实现数组的map方法","二、数据处理 - 11. 实现字符串的repeat方法","二、数据处理 - 12. 实现字符串翻转","二、数据处理 - 13. 将数字每千分位用逗号隔开","二、数据处理 - 14. 实现非负大整数相加","二、数据处理 - 13. 实现 add(1)(2)(3)","二、数据处理 - 14. 实现类数组转化为数组","二、数据处理 - 15. 使用 reduce 求和","二、数据处理 - 16. 将js对象转化为树形结构","二、数据处理 - 17. 使用ES5和ES6求函数参数的和","二、数据处理 - 18. 解析 URL Params 为对象","三、场景应用 - 1. 循环打印红黄绿","三、场景应用 - 2. 实现每隔一秒打印 1,2,3,4","三、场景应用 - 3. 小孩报数问题","三、场景应用 - 4. 用Promise实现图片的异步加载","三、场景应用 - 5. 实现发布-订阅模式","三、场景应用 - 6. 查找文章中出现频率最高的单词","三、场景应用 - 7. 封装异步的fetch，使用async await方式来使用","三、场景应用 - 8. 实现prototype继承","三、场景应用 - 9. 实现双向数据绑定","三、场景应用 - 10. 实现简单路由","三、场景应用 - 11. 实现斐波那契数列","三、场景应用 - 12. 字符串出现的不重复最长长度","三、场景应用 - 13. 使用 setTimeout 实现 setInterval","三、场景应用 - 14. 实现 jsonp ","三、场景应用 - 15. 判断对象是否存在循环引用"],"11 offer收割机之代码输出篇":["建议有时间或者校招要做笔试的同学看下 社招基本只需要看看事件循环的题目","一、异步事件循环 - 1. 代码输出结果","一、异步事件循环 - 2. 代码输出结果","一、异步事件循环 - 3. 代码输出结果","一、异步事件循环 - 4. 代码输出结果","一、异步事件循环 - 5. 代码输出结果","一、异步事件循环 - 6. 代码输出结果","一、异步事件循环 - 7. 代码输出结果","一、异步事件循环 - 8. 代码输出结果","一、异步事件循环 - 9. 代码输出结果","一、异步事件循环 - 10. 代码输出结果","一、异步事件循环 - 11. 代码输出结果","一、异步事件循环 - 12. 代码输出结果","一、异步事件循环 - 13. 代码输出结果","一、异步事件循环 - 14. 代码输出结果","一、异步事件循环 - 15. 代码输出结果","一、异步事件循环 - 16. 代码输出结果","一、异步事件循环 - 17. 代码输出结果","一、异步事件循环 - 18. 代码输出结果","一、异步事件循环 - 19. 代码输出结果","一、异步事件循环 - 20. 代码输出结果","一、异步事件循环 - 21. 代码输出结果","一、异步事件循环 - 22. 代码输出结果","一、异步事件循环 - 23. 代码输出结果","一、异步事件循环 - 24. 代码输出结果","一、异步事件循环 - 25. 代码输出结果","一、异步事件循环 - 26. 代码输出结果","一、异步事件循环 - 27. 代码输出结果","一、异步事件循环 - 28. 代码输出结果","一、异步事件循环 - 29. 代码输出结果","一、异步事件循环 - 30. 代码输出结果","一、异步事件循环 - 31. 代码输出结果","二、this - 1. 代码输出结果","二、this - 2. 代码输出结果","二、this - 3. 代码输出结果","二、this - 4. 代码输出结果","二、this - 6. 代码输出结果","二、this - 7. 代码输出结果","二、this - 8. 代码输出问题","二、this - 9. 代码输出结果","二、this - 10. 代码输出结果","二、this - 11. 代码输出结果","二、this - 12. 代码输出结果","二、this - 13. 代码输出结果","二、this - 14. 代码输出结果","二、this - 15. 代码输出结果","三、作用域变量提升闭包 - 1. 代码输出结果","三、作用域变量提升闭包 - 2. 代码输出结果","三、作用域变量提升闭包 - 3. 代码输出结果","三、作用域变量提升闭包 - 4. 代码输出结果","三、作用域变量提升闭包 - 5. 代码输出结果","三、作用域变量提升闭包 - 6. 代码输出结果","三、作用域变量提升闭包 - 7.  代码输出问题","三、作用域变量提升闭包 - 8. 代码输出结果","四、原型继承 - 1. 代码输出结果","四、原型继承 - 2. 代码输出结果","四、原型继承 - 3. 代码输出结果","四、原型继承 - 4. 代码输出结果","四、原型继承 - 5. 代码输出结果","四、原型继承 - 6. 代码输出结果","四、原型继承 - 7. 代码输出问题","四、原型继承 - 8 代码输出问题","四、原型继承 - 9. 代码输出结果"],"12LeetCode面试常考题目":["这个校招同学建议去刷牛客网高频面试题 以及字节笔试题 群公告有"],"13 offer收割机之Vue篇":["Vue面试题推荐配合鲨鱼哥掘金文章-最全的Vue面试题 一起看","一、Vue基础 - 1. Vue的基本原理","一、Vue基础 - 2. 双向数据绑定的原理","一、Vue基础 - 3. 使用 Object.defineProperty() 来进行数据劫持有什么缺点？","一、Vue基础 - 4. MVVM、MVC、MVP的区别","一、Vue基础 - 5. Computed 和 Watch 的区别","一、Vue基础 - 6. Computed 和 Methods 的区别","一、Vue基础 - 7. slot是什么？有什么作用？原理是什么？","一、Vue基础 - 8. 过滤器的作用，如何实现一个过滤器","一、Vue基础 - 9. 如何保存页面的当前的状态","一、Vue基础 - 10. 常见的事件修饰符及其作用","一、Vue基础 - 11. v-if、v-show、v-html 的原理","一、Vue基础 - 13. v-if和v-show的区别","一、Vue基础 - 14. v-model 是如何实现的，语法糖实际是什么？","一、Vue基础 - 15. v-model 可以被用在自定义组件上吗？如果可以，如何使用？","一、Vue基础 - 16. data为什么是一个函数而不是对象","一、Vue基础 - 17. 对keep-alive的理解，它是如何实现的，具体缓存的是什么？","一、Vue基础 - 18. $nextTick 原理及作用","一、Vue基础 - **19. Vue 中给 data 中的对象属性添加一个新的属性时会发生什么？如何解决？**","一、Vue基础 - 20. Vue中封装的数组方法有哪些，其如何实现页面更新","一、Vue基础 - 21. Vue 单页应用与多页应用的区别","一、Vue基础 - 22. Vue template 到 render 的过程","一、Vue基础 - 23. Vue data 中某一个属性的值发生改变后，视图会立即同步执行重新渲染吗？","一、Vue基础 - 24. 简述 mixin、extends 的覆盖逻辑","一、Vue基础 - 25. 描述下Vue自定义指令","一、Vue基础 - 26. 子组件可以直接改变父组件的数据吗？","一、Vue基础 - 27. Vue是如何收集依赖的？","一、Vue基础 - 28. 对 React 和 Vue 的理解，它们的异同","一、Vue基础 - 29. Vue的优点","一、Vue基础 - 30. assets和static的区别","一、Vue基础 - 31. delete和Vue.delete删除数组的区别","一、Vue基础 - 32. vue如何监听对象或者数组某个属性的变化","一、Vue基础 - 33. 什么是 mixin ？","一、Vue基础 - 34. Vue模版编译原理","一、Vue基础 - 35. 对SSR的理解","一、Vue基础 - 36. Vue的性能优化有哪些","一、Vue基础 - 37. 对 SPA 单页面的理解，它的优缺点分别是什么？","一、Vue基础 - 38. template和jsx的有什么分别？","一、Vue基础 - 39. vue初始化页面闪动问题","一、Vue基础 - 40. extend 有什么作用","一、Vue基础 - 41. mixin 和 mixins 区别","一、Vue基础 - 42. **MVVM**的优缺点**?** ","一、Vue基础 - 43. Vue.use的实现原理","二、生命周期 - 1. 说一下Vue的生命周期","二、生命周期 - 2. Vue 子组件和父组件执行顺序","二、生命周期 - 3. created和mounted的区别","二、生命周期 - 4. 一般在哪个生命周期请求异步数据","二、生命周期 - 5. keep-alive 中的生命周期哪些","三、组件通信 - （1） props  /  $emit","三、组件通信 - （2）eventBus事件总线（$emit / $on）","三、组件通信 - （3）依赖注入（provide / inject）","三、组件通信 - （3）ref / $refs","三、组件通信 - （4）$parent / $children","三、组件通信 - （5）$attrs / $listeners","三、组件通信 - （6）总结","四、路由 - 1. Vue-Router 的懒加载如何实现","四、路由 - 2. 路由的hash和history模式的区别","四、路由 - 3. 如何获取页面的hash变化","四、路由 - 4. $route 和$router 的区别","四、路由 - 5. 如何定义动态路由？如何获取传过来的动态参数？","四、路由 - 6. Vue-router 路由钩子在生命周期的体现","四、路由 - 7. Vue-router跳转和location.href有什么区别","四、路由 - 8. params和query的区别","四、路由 - 9. Vue-router 导航守卫有哪些","四、路由 - 10. 对前端路由的理解","五、Vuex - 1. Vuex 的原理","五、Vuex - 2. Vuex中action和mutation的区别","五、Vuex - 3. Vuex 和 localStorage 的区别","五、Vuex - 4. Redux 和 Vuex 有什么区别，它们的共同思想","五、Vuex - 5. 为什么要用 Vuex 或者 Redux","五、Vuex - 6. Vuex有哪几种属性？","五、Vuex - 7. Vuex和单纯的全局对象有什么区别？","五、Vuex - 8. 为什么 Vuex 的 mutation 中不能做异步操作？","五、Vuex - 9. Vuex的严格模式是什么,有什么作用，如何开启？","五、Vuex - 10. 如何在组件中批量使用Vuex的getter属性","五、Vuex - 11. 如何在组件中重复使用Vuex的mutation","六、Vue30 - 1. Vue3.0有什么更新","六、Vue30 - 2. defineProperty和proxy的区别","六、Vue30 - 3. Vue3.0 为什么要用 proxy？","六、Vue30 - 4.  Vue 3.0 中的 Vue Composition API？","六、Vue30 - 5. Composition API与React Hook很像，区别是什么","七、虚拟DOM - 1. 对虚拟DOM的理解？","七、虚拟DOM - 2. 虚拟DOM的解析过程","七、虚拟DOM - 3. 为什么要用虚拟DOM","七、虚拟DOM - 4. 虚拟DOM真的比真实DOM性能好吗","七、虚拟DOM - 5. DIFF算法的原理","七、虚拟DOM - 6. Vue中key的作用","七、虚拟DOM - 7. 为什么不建议用index作为key?"],"14 vue项目的性能优化":["前言","一、代码层面的优化","二、Webpack 层面的优化","三、基础的 Web 技术优化"],"Webpack面试题":["1. 前端为何要进行打包和构建","2. 与 webpack 类似的工具还有哪些？谈谈你为什么选择使用 webpack 或放弃 webpack","3. loader 和 plugin 的不同","4. 自定义 loader","5. 自定义 plugin","6. 有哪些常见的 loader 和 plugin？它们是解决什么问题的？","7. source-map是什么？生成环境怎么用？","8. webpack中 hash、chunkhash、contenthash的区别","9. webpack 的工作流程","10webpack的热更新原理 - 客户端和服务端在hrm里面分别是指什么？怎么实现通信的？传输的又是什么？","10webpack的热更新原理 - webpack-dev-middleware 在热更新里主要做了什么？","11. tree shaking 机制的原理","12. module chunk 和 bundle","13. chunk 和 bundle 之间的关系","14. 如何提高 webpack 的构建速度","15. webpack 性能优化 - 产出代码","babel 的原理","babel 编译流程"]}
